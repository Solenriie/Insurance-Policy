{
  "translation": {
    "AuthContextJWTError": "Error decoding token: ",
    "loadingText": "Loading...",

    "appName": "InsurancePolicy",
    "headerLinkDashboard": "Dashboard",
    "headerLinkCreatePolicy": "Create Policy",
    "headerLinkAgents": "Agents",
    "headerLinkCreateAgent": "Create Agent",
    "headerLinkLogin": "Login",
    "headerLinkLogout": "Logout",
    "headerSelectLang": "Change Language",
    "headerSelectGBLang": "English",
    "headerSelectRSLang": "Serbian",
    "headerSelectTheme": "Change Theme",
    "headerSelectThemeLight": "Light Mode",
    "headerSelectThemeDark": "Dark Mode",

    "componentBtnCancel": "Cancel",
    "componentBtnCreate": "Create",
    "componentSnackbarTitleSuccess": "Success",
    "componentSnackbarTitleError": "Error",
    "componentExportModalDatePickerSpan": "Select Date Range:",
    "componentExportModalBtnConfirm": "Download Report",
    "snackbarNetworkError": "Network response error",
    "snackbarUnexpectedError": "An unexpected error occurred",

    "userPrefLangSnackbarSuccess": "Language has been changed successfully",
    "userPrefLangSnackbarError": "There was an error updating language preference",
    "userPrefThemeSnackbarSuccess": "Theme has been changed successfully",
    "userPrefThemeSnackbarError": "There was an error updating theme preference",

    "dashboardTitle": "InsurancePolicies",
    "insurancePoliciesSearchPlaceholder": "Find policies by requester, agent, item type, date, price",
    "insurancePoliciesCreatePolicyBtn": "Create Policy",
    "insurancePoliciesExportBtn": "Export Policies",
    "insurancePoliciesTableCreated": "Created",
    "insurancePoliciesTableRequester": "Requester",
    "insurancePoliciesTableAgent": "Agent",
    "insurancePoliciesInsuranceItem": "Insurance Item",
    "insurancePoliciesTablePrice": "Price",
    "insurancePoliciesTableNoSearchData": "No search data found.",
    "insurancePoliciesTableLoading": "Loading...",
    "insurancePoliciesTableNoItemsToLoad": "No more items to load.",
    "insurancePoliciesModalDeletePolicyHeaderTxt": "Delete Insurance Policy",
    "insurancePoliciesModalDeletePolicyBodyTxt": "Are you sure you want to delete this insurance policy?",
    "insurancePoliciesModalDeletePolicyConfirmBtnTxt": "Delete",
    "insurancePoliciesSnackbarDeletePolicySuccess": "Insurance Policy has been deleted successfully, id: ",
    "insurancePoliciesSnackbarDeletePolicyError": "Failed to delete policy",
    "insurancePoliciesModalExportHeaderTxt": "Export Insurance Policies",
    "insurancePoliciesModalExportNoPoliciesError": "There are no policies between selected dates",
    "insurancePoliciesSnackbarExportSucceess": "Report has been exported successfully",
    "insurancePoliciesSnackbarExportError": "Failed to export policies",
    "insurancePoliciesSnackbarPickDatesError": "Failed to export policies",

    "createPolicyPageTitle": "Create New Policy",
    "createPolicyChooseRequesterLabel": "Choose an existing Requester: ",
    "createPolicyChooseRequesterPlaceholder": "Choose a Requester",
    "createPolicyCreateNewRequesterLabel": "Create new Requester: ",
    "createPolicyCreateNewRequesterBtn": "Create new Requester",
    "createPolicyChooseItemLabel": "Choose an Insurance Item: ",
    "createPolicyChooseItemPlaceholder": "Choose an Item: ",
    "createPolicyPickCoverageTypes": "Pick Coverage Type(s): ",
    "createPolicyPriceLabel": "Enter Price: ",
    "createPolicyPricePlaceholder": "Enter Price...",
    "useCoveragesTypesPriceRange": "Price range for {{item}} is: {{min}} - {{max}}",
    "createPolicyFormErrorChooseRequester": "You must select a Requester",
    "createPolicyFormErrorChooseItem": "You must select an Item",
    "createPolicyFormErrorPriceEmpty": "Price field cannot be empty",
    "createPolicyFormErrorPriceInvalid": "Price range for {{item}} must be between {{min}} and {{max}}",
    "createPolicyFormErrorCoverage": "You must pick at least one coverage type",
    "createPolicySnackbarCreatePolicySuccess": "Insurance Policy has been created",
    "createPolicySnackbarCreatePolicyError": "Failed to create Policy",

    "createRequesterTitle": "Create new Requester",
    "createRequesterFirstNameLabel": "First Name: ",
    "createRequesterFirstNamePlaceholder": "Enter first name...",
    "createRequesterLastNameLabel": "Last Name: ",
    "createRequesterLastNamePlaceholder": "Enter last name...",
    "createRequesterPhoneLabel": "Phone Number: ",
    "createRequesterPhonePlaceholder": "Enter phone number...",
    "createRequesterEmailLabel": "Email: ",
    "createRequesterEmailPlaceholder": "Enter email...",
    "createRequesterSnackbarSuccess": "New requester has been created",
    "createRequesterErrorEmailExists": "Email already exists in the database",
    "createRequesterErrorFirstNameEmpty": "First name field cannot be empty",
    "createRequesterErrorFirstNameInvalid": "First name must start with an uppercase letter and be at least 2 characters long",
    "createRequesterErrorLastNameEmpty": "Last name field cannot be empty",
    "createRequesterErrorLastNameInvalid": "Last name must start with an uppercase letter and be at least 2 characters long",
    "createRequesterErrorEmailEmpty": "Email field cannot be empty",
    "createRequesterErrorEmailInvalid": "Email is invalid",
    "createRequesterErrorPhoneEmpty": "Phone number field cannot be empty",
    "createRequesterErrorPhoneInvalid": "Phone number must be at least 7 digits long"
  }
}
